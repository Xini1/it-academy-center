name: "Setup repositories"
on:
  workflow_dispatch:
jobs:
  read-repositories:
    name: "Read repositories"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: repositories
        run: "kotlin ./RepositoryMatrix.main.kts >> $GITHUB_OUTPUT"
    outputs:
      repositories: ${{ steps.repositories.outputs.repositories }}
  setup-repository:
    name: "Setup repository"
    runs-on: ubuntu-latest
    needs: read-repositories
    strategy:
      matrix: ${{ fromJson(needs.read-repositories.outputs.repositories) }}
    steps:
      - uses: actions/checkout@v3
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: "Clone the repository"
        run: "git clone ${{ matrix.repository }} repository"
      - name: "Create '.github/workflows' directory"
        working-directory: "repository"
        run: "mkdir -p ./.github/workflows"
      - name: "Copy GitHub workflows to the repository"
        run: "cp -r ./templates/* ./repository/.github/workflows"
      - name: "Add copied GitHub workflows to the index"
        working-directory: "repository"
        run: "git add ./.github/workflows"
      - name: "Check index"
        id: check-index
        working-directory: "repository"
        run: |
          if [[ $( git diff --name-only --cached --diff-filter=AM ) ]]; then
            echo "has-files-to-commit=true" >> $GITHUB_OUTPUT
          fi
      - name: "Setup git username"
        if: steps.check-index.outputs.has-files-to-commit
        working-directory: "repository"
        run: "git config user.name Xini1"
      - name: "Setup git email"
        if: steps.check-index.outputs.has-files-to-commit
        working-directory: "repository"
        run: "git config user.email tereshchenko.xini@gmail.com"
      - name: "Commit copied GitHub workflows"
        if: steps.check-index.outputs.has-files-to-commit
        working-directory: "repository"
        run: "git commit -m 'GitHub workflows'"
      - name: "Push to the remote repository"
        if: steps.check-index.outputs.has-files-to-commit
        working-directory: "repository"
        run: "git push"